name: chat-bot
imagename: chat-bot
namespace: lottery


service:
  type: ClusterIP
  multiport: 
  - name: chat-bot
    port: 8080


deployment:
  replicas: 1
  imagePullSecrets:
    - docker-registry-preprod
  containers:
  - name: chat-bot
    imagename: chat-bot
    port: 8080
    probe:
      livenessProbe:
        enable: true
        initialDelaySeconds: 120
        probeType: http
        http:
          path: /actuator/health
          port: 8080
      readinessProbe:
        enable: true
        initialDelaySeconds: 30
        probeType: http
        http:
          path: /actuator/health
          port: 8080
    resources:
      requests:
        cpu: "500m"
        memory: 1Gi
      limits:
        cpu: "1"
        memory: 2548Mi
    restartPolicy: Always
    env: {}
    envFromSecret:
      DATASOURCE_CHAT-BOT_HOST:
        postgres-lottery-main-write: host
      JWT_KEY:
        lottery-jwt: private-key
      SPRING_DATASOURCE_USERNAME:
        postgres-lottery-main-admin: superuser
      CHAT-BOT_TELEGRAM_TOKEN:
        chat-bot: telegram-token
      SPRING_DATASOURCE_PASSWORD:
        postgres-lottery-main-admin: superuser-password
      DATASOURCE_CHAT-BOT_PORT:
        postgres-lottery-main-write: port
      CHAT-BOT_VIBER_TOKEN:
        chat-bot: viber-token


ingress:
  enable: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  hosts:
  - host: chat-bot-api-preprod.belbet.by
    paths:
      - path: /
        pathType: Prefix
  tls:
  - hosts:
    - chat-bot-api-preprod.belbet.by
    secretName: default-ssl-secret

hpa:
  enable: false