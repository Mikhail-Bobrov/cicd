name: chat-bot
imagename: chat-bot
namespace: default


service:
  type: ClusterIP
  multiport: 
  - name: chat-bot
    port: 8080


deployment:
  replicas: 1
  podAntiAffinity: true
  imagePullSecrets:
    - gcr-json-key
  containers:
  - name: chat-bot
    imagename: chat-bot
    port: 8080
    probe:
      livenessProbe:
        enable: true
        initialDelaySeconds: 120
        probeType: http
        http:
          path: /actuator/health
          port: 8080
      readinessProbe:
        enable: true
        initialDelaySeconds: 30
        probeType: http
        http:
          path: /actuator/health
          port: 8080
    resources:
      requests:
        cpu: "100m"
        memory: 1Gi
      limits:
        cpu: "1"
        memory: 2548Mi
    restartPolicy: Always
    env: {}
    envFromSecret:
      JWT_KEY:
        jwt-qa: jwt-key
      SPRING_DATASOURCE_USERNAME:
        postgres-default-qa-admin: superuser
      SPRING_DATASOURCE_PASSWORD:
        postgres-default-qa-admin: superuser-password


ingress:
  enable: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  hosts:
  - host: mytestingress
    paths:
      - path: /
        pathType: Prefix
  tls:
  - hosts:
    - mytestingress
    secretName: default-ssl-secret

hpa:
  enable: false