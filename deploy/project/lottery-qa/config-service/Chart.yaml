name: config-service
imagename: config-service
namespace: default


service:
  type: ClusterIP
  multiport: 
  - name: config-service
    port: 8080


deployment:
  monitoring:
    enable: true
    path: /actuator/prometheus
    port: "8080"
  replicas: 1
  imagePullSecrets:
    - gcr-json-key
  containers:
  - name: config-service
    imagename: config-service
    port: 8080
    probe:
      livenessProbe:
        enable: true
        initialDelaySeconds: 120
        probeType: http
        http:
          path: /actuator/health
          port: 8080
      readinessProbe:
        enable: true
        initialDelaySeconds: 30
        probeType: http
        http:
          path: /actuator/health
          port: 8080
    resources:
      requests:
        cpu: "500m"
        memory: 100Mi
      limits:
        cpu: "1"
        memory: 2Gi
    restartPolicy: Always
    env: {}

    envFromSecret:
      JWT_KEY:
        jwt-secret: jwt-key
      DATASOURCE_CLICKHOUSE_USER:
        clickhouse-default-qa-credentials: pwd-lottery-user
      DATASOURCE_CLICKHOUSE_PASSWORD:
        clickhouse-default-qa-credentials: pwd-lottery-user
      DATASOURCE_CLICKHOUSE_ADDRESS:
        clickhouse-default-qa-credentials: host
      DATASOURCE_GATEKEEPER_USERNAME:
        postgres-default-gatekeeper-admin: superuser
      DATASOURCE_GATEKEEPER_PASSWORD:
        postgres-default-gatekeeper-admin: superuser-password
      DATASOURCE_GATEKEEPER-REPORT_USERNAME:
        postgres-default-gatekeeper-admin: superuser
      DATASOURCE_GATEKEEPER-REPORT_PASSWORD:
        postgres-default-gatekeeper-admin: superuser-password
      KAFKA_ADDRESS:
        kafka-default-qa-write: host


ingress:
  enable: false

hpa:
  enable: false
