name: backoffice
imagename: backoffice
namespace: default


service:
  type: ClusterIP
  multiport: 
  - name: backoffice
    port: 8080


deployment:
  replicas: 1
  imagePullSecrets:
    - gcr-json-key
  containers:
  - name: backoffice
    imagename: backoffice
    port: 8080
    probe:
      livenessProbe:
        enable: true
        initialDelaySeconds: 300
        probeType: http
        http:
          path: /actuator/health/liveness
          port: 8080
      readinessProbe:
        enable: true
        initialDelaySeconds: 15
        probeType: http
        http:
          path: /actuator/health/readiness
          port: 8080
    resources:
      requests:
        cpu: 5m
        memory: 3Gi
        ephemeral_storage: 4Gi
      limits:
        cpu: 1
        ephemeral_storage: 8Gi
        memory: 6Gi
    restartPolicy: Always
    env: {}
    envFromSecret: {}
ingress:
  enable: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/auth-realm: Authentication Required - Backoffice
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/cors-allow-origin: '*'
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 3584m
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "2500"
    nginx.ingress.kubernetes.io/proxy-next-upstream-timeout: "2500"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3200"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3200"
    nginx.ingress.kubernetes.io/server-snippet: if ($request_uri = /actuator/prometheus) { return 403; }
    nginx.ingress.kubernetes.io/ssl-redirect: "true"

  hosts:
  - host: mytestingress
    paths:
      - path: /
        pathType: Prefix
  tls:
  - hosts:
      - mytestingress
    secretName: default-ssl-secret


hpa:
  enable: false
